version: 2
jobs:
  build-code: 
    docker:
      - image: node:argon
    steps:
      - checkout
      - run:
           name: echo nodejs information
           command: |
             echo "node version $(node -v) running"
             echo "npm version $(npm -v) running"
      - run: 
          name: server
          command: |
            cd server
            npm install 
            npm run lint
            npm test
      
      - run: 
          name: client
          command: |
            cd client
            npm install 
            npm run bower
            npm run build

      - run: 
           name: notify slack on failure
           when: on_fail
           command: |
             chmod +x .circleci/notify-slack.sh
             ./.circleci/notify-slack.sh Hytteadmin build-publish-deploy false
             
      - run: 
           name: notify slack on sucess
           when: on_success
           command: |
             chmod +x .circleci/notify-slack.sh
             ./.circleci/notify-slack.sh Hytteadmin build-publish-deploy true


  build-image:
    docker:
      - image: google/cloud-sdk:latest

    working_directory: ~/repo

    steps:
      - run:
          name: authenticate with gcloud
          command: |
            echo $GCLOUD_DOCKER_CREDENTIALS > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      # if authentication succeeded - checkout code
      - checkout

      # starts a remote docker environment to run docker commands
      - setup_remote_docker

      - run:
          name: build Hytteadmin [Server] docker image and push image to GCR
          command: |
            cd server
            gcloud auth configure-docker --quiet
            TAG=${CIRCLE_SHA1:0:9}
            docker build -t hytteadmin-server .
            docker tag hytteadmin-server eu.gcr.io/dnt-docker-registry-public/hytteadmin-server:latest
            docker tag hytteadmin-server eu.gcr.io/dnt-docker-registry-public/hytteadmin-server:$TAG
            docker push eu.gcr.io/dnt-docker-registry-public/hytteadmin-server:latest
            docker push eu.gcr.io/dnt-docker-registry-public/hytteadmin-server:$TAG

      - run:
          name: build Hytteadmin [Client] docker image and push image to GCR
          command: |
            cd client
            gcloud auth configure-docker --quiet
            TAG=${CIRCLE_SHA1:0:9}
            docker build -t hytteadmin-client .
            docker tag hytteadmin-client eu.gcr.io/dnt-docker-registry-public/hytteadmin-client:latest
            docker tag hytteadmin-client eu.gcr.io/dnt-docker-registry-public/hytteadmin-client:$TAG
            docker push eu.gcr.io/dnt-docker-registry-public/hytteadmin-client:latest
            docker push eu.gcr.io/dnt-docker-registry-public/hytteadmin-client:$TAG     
            
      - run:
          name: build Hytteadmin [Nginx] docker image and push image to GCR
          command: |
            cd nginx
            gcloud auth configure-docker --quiet
            TAG=${CIRCLE_SHA1:0:9}
            docker build -t hytteadmin-nginx .
            docker tag hytteadmin-nginx eu.gcr.io/dnt-docker-registry-public/hytteadmin-nginx:latest
            docker tag hytteadmin-nginx eu.gcr.io/dnt-docker-registry-public/hytteadmin-nginx:$TAG
            docker push eu.gcr.io/dnt-docker-registry-public/hytteadmin-nginx:latest
            docker push eu.gcr.io/dnt-docker-registry-public/hytteadmin-nginx:$TAG            

      - run: 
          name: notify slack on sucess
          when: on_success
          command: |
            chmod +x .circleci/notify-slack.sh
            ./.circleci/notify-slack.sh Hytteadmin build-publish-deploy true

      - run: 
          name: notify slack on failure
          when: on_fail
          command: |
            chmod +x .circleci/notify-slack.sh
            ./.circleci/notify-slack.sh Hytteadmin build-publish-deploy false                      
  
  deploy-to-dev:
    docker:
      - image: praqma/helmsman:v1.3.0-helm-v2.8.1
    steps:
      - checkout
      - run:
          name: run helmsman
          command: |
            export SERVER_IMAGE_TAG=${CIRCLE_SHA1:0:9}
            export CLIENT_IMAGE_TAG=${CIRCLE_SHA1:0:9}
            export NGINX_IMAGE_TAG=${CIRCLE_SHA1:0:9}
            helmsman -debug -apply -f .circleci/helmsman-dev-deployment.toml
  deploy-to-beta:
    docker:
      - image: praqma/helmsman:v1.3.0-helm-v2.8.1
    steps:
      - checkout
      - run:
          name: run helmsman
          command: |
            helmsman -debug -apply -f .circleci/helmsman-beta-deployment.toml

  # deploy-to-prod:
  #   docker:
  #     - image: praqma/helmsman:v1.3.0-helm-v2.8.1
  #   steps:
  #     - checkout
  #     - run:
  #         name: run helmsman
  #         command: |
  #           helmsman -debug -apply -f .circleci/helmsman-prod-deployment.toml          
workflows:
  version: 2
  build-publish-deploy:
    jobs:
      - build-code:
          filters:
            branches:
              only:
                - circleci
      - build-image:
          requires:
            - build-code
          context: dnt-k8s-dev-beta
          filters:
            branches:
              only:
                - circleci
      # - deploy-to-dev:
      #     requires:
      #       - build-image
      #     context: dnt-k8s-dev-beta
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - deploy-to-beta:
      #     context: dnt-k8s-dev-beta
      #     filters:
      #       branches:
      #         only:
      #           - deploy-beta
      
      # - deploy-to-prod:
      #     context: dnt-k8s-prod
      #     filters:
      #       branches:
      #         only:
      #           - deploy-prod          